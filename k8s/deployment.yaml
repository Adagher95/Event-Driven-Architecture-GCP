apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      serviceAccountName: pubsub-app-sa
      containers:
      - name: flask-app
        image: us-docker.pkg.dev/iac-infra-proj-prod/gcr.io/flask-app:v2.1
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: flask-app-secrets
              key: DATABASE_HOST
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: flask-app-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flask-app-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: flask-app-secrets
              key: DATABASE_NAME
        - name: PUBSUB_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: flask-app-secrets
              key: PUBSUB_PROJECT_ID
        - name: PUBSUB_TOPIC_ID
          valueFrom:
            secretKeyRef:
              name: flask-app-secrets
              key: PUBSUB_TOPIC_ID

        readinessProbe: 
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe: 
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: url-map-iac-infra-proj1-prod   
  namespace: default
  annotations:
    cloud.google.com/load-balancer-type: "external"  
spec:
  type: LoadBalancer
  selector:
    app: flask-app
  ports:
  - port: 80  
    targetPort: 8080  
